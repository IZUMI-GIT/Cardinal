// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  hashedPassword String
  name String?
  role Role @default(USER)
  userName String @unique
  boards Board[]
  profile Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  session Session[]
}

model Profile{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Board {
  id Int @id @default(autoincrement())
  title String 
  user User @relation(fields: [userId], references: [id])
  userId Int
  columns Column[]
  position Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?

  @@unique([userId, title])
  @@index([userId])
}

model Column {
  id Int @id @default(autoincrement())
  title String
  board Board @relation(fields: [boardId], references: [id])
  boardId Int
  position Int
  cards Card[]
  deletedAt DateTime?

  @@unique([boardId, title])
  @@index([boardId])
}

model Card {
  id Int @id @default(autoincrement())
  content String
  column Column @relation(fields: [columnId], references: [id])
  columnId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  position Int
  deletedAt DateTime?
  @@index([columnId])
}

model Session {
  id Int @id @default(autoincrement())
  userId Int
  user User @relation(fields: [userId], references: [id])
  refreshToken String @unique
  createdAt DateTime @default(now())
  userAgent String
  ipAddress String?
  valid Boolean @default(true)
  deletedAt DateTime?
}

enum Role {
  USER
  ADMIN
}